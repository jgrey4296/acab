types.string: (::σ) end
types.other: (::σ) end

a.b.c(::types.string)
a.b.d(::types.other)

a.string."test string {x}"

a.agenda.test: (::Agenda)
    | $proposals |

    λacab.modules.operators.AgendaReturn $proposals
end

a.rule.test: (::ρ)
    a.b.$x(::types.string)?
    a.string.$y?

    λacab.modules.operators.FormatOp $y -> $z

    a.b.q
    λacab.modules.operators.ActionPrint "Testing"
    λacab.modules.operators.ActionPrint $z
end

a.layer.test: (::Layer)
    a.agenda.$agenda?
    a.rule.$rules(ctx.collapse)?

    λacab.modules.operators.LayerRunRules $rules -> $props
    λacab.modules.operators.LayerRunAgenda $agenda $props -> $results

    λacab.modules.operators.LayerPerform $results
end


a.typing.layer: (::Layer)
    λacab.modules.operators.TypeCheck
end