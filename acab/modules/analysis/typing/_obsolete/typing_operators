// type operators:
type equal
type equivalent
type subtype
type exists

// sentence operator:
sen to types (a.b.c) -> ([atom].[atom].[blah.bloo])
slice sentences (a.b.c(::bloo).d(::blah)) -> c.d, d

// definition operators:
check sen against def

// node operators:
check node against def

// statement operators:
statement to sentences
