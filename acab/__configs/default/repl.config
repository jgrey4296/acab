[Module.REPL]
# TODO specify default working memory
# ENGINE           = acab.modules.engines.configured.basic
ENGINE           = acab.modules.engines.configured.exlo
# specify default module loads, split on newline
MODULES          = acab.modules.operators.query
                   acab.modules.operators.transform
                   acab.modules.operators.action
                   acab.modules.operators.dfs
                   acab.modules.analysis.typing
                   # acab.modules.values.sen_val
                   acab.core.parsing.component_dsl
# Specify default prompts
PROMPT           = "ACAB REPL"
PROMPT_ML        = "... "
# Need to escape $ because of interpolation
MULTI_LINE_START = :{
MULTI_LINE_END   = :}

[Module.REPL.shortcuts]
break     = b
ctx       = c
echo      = e
exit      = q
load      = l
print ctx = pc
print wm  = pwm
save      = s
step      = t
shortcuts = sc
parser    = dsl
forcep    = fp

[Module.Repl.CommandImports]
acab.modules.repl.commands.break_cmd
acab.modules.repl.commands.exit_cmd
acab.modules.repl.commands.force_parser_cmd
acab.modules.repl.commands.print_cmd
acab.modules.repl.commands.report_cmd
acab.modules.repl.commands.tutorial_cmd
acab.modules.repl.commands_control
acab.modules.repl.commands_core
acab.modules.repl.commands_dependent
acab.modules.repl.commands_info
acab.modules.repl.commands_post_hooks
acab.modules.repl.commands.log_cmd

[Module.Repl.Intro]
Welcome to ACAB.
Type "tutorial" for a tutorial.
Type "help" or "?" to list commands.
Type ":sc" to list command shortcuts.
Type ":q" to quit.

[Module.Repl.Debug.Intro]
Shunting to Python debugger.
Explore using: self._cmd.state, self._cmd.state.engine
self is the break cmd,
self._cmd is the repl,
self._cmd.state is data the repl tracks,
self._cmd.state.engine is the active ACAB engine,
self._cmd.state.ctxs is the current context set
